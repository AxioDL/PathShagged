.build:variables:
  variables: &build_variables
    GIT_SUBMODULE_STRATEGY: recursive
    URDE_MACOS_CODESIGN_UID: VMFVV424V2

.build:macos: &macos_definition
  stage: build
  tags:
    - macos
  script:
    - mkdir build
    - cd build
    - >
      cmake
      -GNinja
      -DCMAKE_BUILD_TYPE=RelWithDebInfo
      -DLLVM_ROOT_DIR=/opt/urde-llvm
      -DURDE_DLPACKAGE=urde-$CI_PIPELINE_ID-macos-x86_64-$URDE_VECTOR_ISA
      -DURDE_VECTOR_ISA=$URDE_VECTOR_ISA
      ..
    - ninja urde hecl visigen
    - cd Editor
    - cp -R urde.app $CI_PROJECT_DIR/URDE.app
    - cd $CI_PROJECT_DIR
    - strip -S -o URDE.app/Contents/MacOS/urde URDE.app/Contents/MacOS/urde
    - strip -S -o URDE.app/Contents/MacOS/hecl URDE.app/Contents/MacOS/hecl
    - strip -S -o URDE.app/Contents/MacOS/visigen URDE.app/Contents/MacOS/visigen
    - codesign -s $URDE_MACOS_CODESIGN_UID -v --deep URDE.app
  only:
    - release
  artifacts:
    name: "urde-$CI_PIPELINE_ID-macos-x86_64-$URDE_VECTOR_ISA"
    paths:
      - URDE.app/
    expire_in: 1 week

build:macos:sse3:
  <<: *macos_definition
  variables:
    <<: *build_variables
    URDE_VECTOR_ISA: sse3

build:macos:sse41:
  <<: *macos_definition
  variables:
    <<: *build_variables
    URDE_VECTOR_ISA: sse41

build:macos:avx:
  <<: *macos_definition
  variables:
    <<: *build_variables
    URDE_VECTOR_ISA: avx

build:macos:avx2:
  <<: *macos_definition
  variables:
    <<: *build_variables
    URDE_VECTOR_ISA: avx2

.build:linux: &linux_definition
  stage: build
  tags:
    - linux
  script:
    - mkdir build
    - cd build
    - >
      cmake
      -GNinja
      -DCMAKE_BUILD_TYPE=RelWithDebInfo
      -DURDE_DLPACKAGE=urde-$CI_PIPELINE_ID-linux-x86_64-$URDE_VECTOR_ISA
      -DURDE_VECTOR_ISA=$URDE_VECTOR_ISA
      ..
    - ninja urde hecl visigen
    - cp Editor/urde $CI_PROJECT_DIR
    - strip --strip-debug -o $CI_PROJECT_DIR/urde Editor/urde
    - rm -r $CI_PROJECT_DIR/hecl
    - strip --strip-debug -o $CI_PROJECT_DIR/hecl hecl/driver/hecl
    - rm -r $CI_PROJECT_DIR/visigen
    - strip --strip-debug -o $CI_PROJECT_DIR/visigen visigen/visigen
  only:
    - release
  artifacts:
    name: "urde-$CI_PIPELINE_ID-linux-x86_64-$URDE_VECTOR_ISA"
    paths:
      - urde
      - hecl
      - visigen
    expire_in: 1 week

build:linux:sse3:
  <<: *linux_definition
  variables:
    <<: *build_variables
    URDE_VECTOR_ISA: sse3

build:linux:sse41:
  <<: *linux_definition
  variables:
    <<: *build_variables
    URDE_VECTOR_ISA: sse41

build:linux:avx:
  <<: *linux_definition
  variables:
    <<: *build_variables
    URDE_VECTOR_ISA: avx

build:linux:avx2:
  <<: *linux_definition
  variables:
    <<: *build_variables
    URDE_VECTOR_ISA: avx2
    
.build:win32: &win32_definition
  stage: build
  tags:
    - win32
  script:
    - set PATH=%PATH%;"C:\Program Files (x86)\Windows Kits\10\Debuggers\x64"
    - >
      call "C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\VC\Auxiliary\Build\vcvarsall.bat" amd64
    - mkdir build
    - cd build
    - >
      cmake
      -GNinja
      -DCMAKE_BUILD_TYPE=RelWithDebInfo
      -DURDE_DLPACKAGE=urde-%CI_PIPELINE_ID%-win32-x86_64-%URDE_VECTOR_ISA%
      -DURDE_VECTOR_ISA=%URDE_VECTOR_ISA%
      ..
    - ninja urde hecl visigen
    - cp Editor\urde.exe %CI_PROJECT_DIR%\urde.exe
    - pdbcopy Editor\urde.pdb %CI_PROJECT_DIR%\urde.pdb -p
    - cp hecl\driver\hecl.exe %CI_PROJECT_DIR%\hecl.exe
    - pdbcopy hecl\driver\hecl.pdb %CI_PROJECT_DIR%\hecl.pdb -p
    - cp visigen\visigen.exe %CI_PROJECT_DIR%\visigen.exe
    - pdbcopy visigen\visigen.pdb %CI_PROJECT_DIR%\visigen.pdb -p
  only:
    - release
  artifacts:
    name: "urde-$CI_PIPELINE_ID-win32-x86_64-$URDE_VECTOR_ISA"
    paths:
      - urde.exe
      - urde.pdb
      - hecl.exe
      - hecl.pdb
      - visigen.exe
      - visigen.pdb
    expire_in: 1 week

build:win32:sse2:
  <<: *win32_definition
  variables:
    <<: *build_variables
    URDE_VECTOR_ISA: sse2

build:win32:sse41:
  <<: *win32_definition
  variables:
    <<: *build_variables
    URDE_VECTOR_ISA: sse41

build:win32:avx:
  <<: *win32_definition
  variables:
    <<: *build_variables
    URDE_VECTOR_ISA: avx

build:win32:avx2:
  <<: *win32_definition
  variables:
    <<: *build_variables
    URDE_VECTOR_ISA: avx2

deploy:
  stage: deploy
  only:
    - release
  dependencies: []
  tags:
    - server
  variables:
    GIT_STRATEGY: none
  script:
    - python3 /var/lib/gitlab-runner/deploy_urde.py $CI_PIPELINE_ID
